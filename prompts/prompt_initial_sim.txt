You are an expert software developer. Create a comprehensive and well-documented 2D Predator-Prey simulator using Python and Pygame. The simulator should meet the following specifications:

1. **Game Window**: 
    - Start in windowed mode with a resolution of 1280x720.
    - Support resizing while maintaining the aspect ratio.
    - Provide an option to switch to full-screen mode.

2. **World Coordinates**:
    - The simulation takes place in world coordinates.
    - Allow the user to zoom and pan around the world.
	- Use a grid background for the world, and solid black to mark inaccessible areas outside the world.

3. **User Controls**:
    - Use the mouse wheel to zoom in and out, maintaining the center of the world over the mouse position.
    - Use arrow keys or the left mouse button to click and drag to pan around the world.

4. **Assets**:
	- Root game directory is "T:\Dev\PredPrey_GP4omini"
    - Image assets are located in the following directories:
        - Prey: "T:\Dev\PredPrey_GP4omini\assets\prey"
        - Predators: "T:\Dev\PredPrey_GP4omini\assets\pred"
    - Each asset is a 256x256 pixel image, you will probably want to downscale them considerably.
    - File naming convention for assets:
        - Predators: pred0001.png, pred0002.png, ..., pred0050.png
        - Prey: prey0001.png, prey0002.png, ..., prey0050.png

5. **Simulation**:
    - Predators hunt Prey.
	- There can be up to 50 different types of both pred and prey, each represented by a unique asset.
	- The total number of pred & prey in a simulation can be up to 500 combined.
    - Prey try to avoid being killed.
    - Print real-time simulation statistics to the console.
    - Upon simulation completion, print a comprehensive summary of the simulation statistics.

6. **Code Structure**:
    - Include all code in a single file.
    - Ensure the code is well-commented for clarity.
	
7. **Headless Mode**:
	- The sim must be capable of running in headless mode without a GUI for unit testing purposes.
	- Include a command line argument "--headless" to run in this mode.
	- Running in headless mode should automatically exit the program after 5 seconds.

### Example Structure
- **Initialization**: Setting up the Pygame environment, window, and initial configurations.
- **Asset Loading**: Loading predator and prey images from the specified directories.
- **Event Handling**: Managing user input for zooming and panning.
- **Simulation Logic**: Implementing predator and prey behaviors.
- **Rendering**: Drawing the world and entities on the screen.
- **Statistics**: Printing real-time and final simulation statistics to the console.

Make sure to provide detailed comments explaining each section and function within the code.  

Only reply with complete code and nothing else.  Do not wrap the code in ```python or ``` tags.